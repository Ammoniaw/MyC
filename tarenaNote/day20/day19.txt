1.数据结构和算法
1.1.数据结构概念：描述计算机中数据之间的关系和存储方式
1.2.数据结构分类：
	逻辑结构：描述数据之间的关系
	物理结构：描述数据的存储方式
	运算结构：描述数据的运算过程,例如：1+1=2
1.3.逻辑结构又分四种：
	集合结构：只强调总体，不强调数据之间的关系,例如：抢钱，公交车
	线性结构：描述数据的一对一的前后关系,例如：排队打饭
	树形结构：描述数据的一对多的关系,例如：家谱
	图形结构：描述数据的多对多的关系,例如：地图,网球拍
1.4.物理结构又分两种：
	顺序结构：基于数组实现,内存连续，一个元素挨着一个元素
	链式结构：基于单链表,双链表和二叉树来实现
1.5.数据结构研究的五类对象：堆栈，队列，单链表，双链表，二叉树
1.6.数据结构之栈(又称堆栈,stack)
	特点：具有先进后出或者后进先出的特性
	例如：放书取书,鸡尾酒,10进制转2进制,函数调用等
	只操作一端,这一端又称栈顶
	入栈：将数据保存到栈对应的内存空间的过程，又称压栈,push stack
	出栈：从栈对应的内存空间取出数据的过程,又称弹栈,pop stack
	堆栈的内存操作示意图:堆栈.png
	参考代码：stack目录
	10进制转2进制参考代码：stack1目录
1.7.数据结构之队列(queue)
	特点：具有先进先出的特性(First In First Out = FIFO)
	入队：将数据保存到队列的内存中,操作队尾(rear)
	出队：从队列的内存中取出数据,操作队首(front)
	队列的内存操作示意图：队列.png
1.8.数据结构之单链表(list)
	案例：编程实现：刘备可以找到关羽的信息,关羽可以找到张飞的信息,刘备可以找到张飞的信息
	具体参见：单链表.png
	参考代码：student.c
	
	单链表涉及的两个结构体：
	//描述节点信息的结构体
	struct node { //node名称随便取名
		int data; //节点的数据，根据自己的需求添加修改即可
		struct node *next; //保存下一个节点的首地址
	};
	//描述整个单链表的结构体
	struct list {
		struct node *head; //保存头节点的首地址
		struct node *tail; //保存尾节点的首地址
	};

1.9.数据结构之双链表
	涉及的两个结构体：
	//描述节点信息的结构体
	struct node { //node名称随便取名
		int data; //节点的数据，根据自己的需求添加修改即可
		struct node *next; //保存下一个节点的首地址
		struct node *prev; //保存上一个节点的首地址
	};
	//描述整个双链表的结构体
	struct list {
		struct node head; //保存头节点
		struct node tail; //保存尾节点
	};
	参考代码：list2目录
	







	