练习：求班级的总分，平均分，最高分
要求：
	1.编写input函数输入学生的成绩
	2.编写total_max函数求总分和最高分
	3.学生成绩保存到一个数组中(不允许采用全局数组)
练习：
	int a[] = {1,2,3,4,5};
	int* p = a, *q = &a[8];
	printf ("%d\n", a[(q-p)/2]);
	//分析
	int *p = a 等价于int *p = &a[0] = a + 0;
	int *q = &a[8] = a + 8;
	q - p = a + 8 - (a + 0) = 8
	a[(q-p)/2] = a[8/2] = a[4] = 5
	
	a[8] = 100; //越界,偷摸住到没有开的房间
	printf("%d\n", a[8]); //越界,偷窥没有开的房间
	
	int *q = &a[8]; //仅仅获取第9个元素的首地址，也就是知道一个房间的房间号,又没有住又没有偷窥
	
要求：分配4字节内存并且存储0x12345678数据,要求数据的低位放到内存的低地址
	  数据的高位放到内存的高地址
	  要求利用指针获取或者修改4字节内存中的任意1字节或者2字节或者4字节数据
	  这个搞定了，只要将来给你任意一块内存，利用指针就可以任意访问了！
	  int a = 0x12345678;
	
明确：
	32位系统,一个内存地址由32位组成，大小4字节，unsigned int/unsigned long也是4字节
	64位系统,一个内存地址由64位组成,  大小8字节， usigned int是4字节，unsigned long是8字节
	结论：32位系统,unsigned int/unsigned long定义的变量可以保存任意一个地址
	int a = 520;
	unsigned int p1 = (unsigned int)&a; //将a的地址(就是一个编号嘛)保存到p1变量中,强转就是欺骗gcc去除警告
	unsigned long p2 = (unsigned long)&a; //将a的地址(就是一个编号嘛)保存到p1变量中,强转就是欺骗gcc去除警告
	64位系统,unsigned long定义的变量可以保存任意一个地址,但是unsigned int就不行
	int a = 520;
	unsigned int p1 = (unsigned int)&a; //地址丢失了，只能保存4字节
	unsigned long p2 = (unsigned long)&a; //可以的,将a的地址(就是一个编号嘛)保存到p2变量中,强转就是欺骗gcc去除警告	
	//通过p2访问a的内存
	printf("a = %d\n", *(int *)p2); //强转的目的是欺骗gcc,将p2保存的地址转换为int类型的指针
	*(int *)p2  = 521;
	所以：不管是32位还是64位系统，都可以用unsigned long类型的变量来保存一个地址(编号嘛:0x112233445566)
	          后期使用时记得做个类型转换就可以了，否则gcc报错呀
	
	
	








		
	  